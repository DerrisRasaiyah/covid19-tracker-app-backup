{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/services/data-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { CountriesComponent } from './countries/countries.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'countries', component: CountriesComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">COVID-19 Tracker</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"countries\\\">Countries</a>\\n      </li>\\n\\n    </ul>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    CountriesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n    NgxPaginationModule,\n    Ng2OrderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".jumbotron {\\r\\n    padding: 2rem 2rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY291bnRyaWVzL2NvdW50cmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY291bnRyaWVzL2NvdW50cmllcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmp1bWJvdHJvbiB7XHJcbiAgICBwYWRkaW5nOiAycmVtIDJyZW07XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"jumbotron align-content-center\\\">\\n  <h2 class=\\\"display-4 text-center\\\">COVID-19 Tracker Countries Vice</h2>\\n  <hr class=\\\"my-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"form-group col-6 mx-auto\\\">\\n        <select id=\\\"c\\\" class=\\\"form-control\\\" #country (change)=\\\"onSelectCountry(country.value)\\\">\\n          <option value=\\\"\\\"> -- Select Country --</option>\\n          <option *ngFor=\\\"let country of countries\\\" value=\\\"{{country}}\\\">{{ country }}</option>\\n        </select>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <h2 class=\\\"text-center\\\">{{selectedCountry}}</h2>\\n    </div>\\n  </div>\\n  <hr class=\\\"my-2\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Confirmed</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ confirmed | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3> Deaths</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ deaths | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Recovered</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ recovered | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Active</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ active | number}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr class=\\\"my-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <input class=\\\"float-left m-2 p-2\\\" type=\\\"text\\\" name=\\\"stateName\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"stateName\\\"\\n        (ngModelChange)=\\\"search()\\\">\\n      <pagination-controls class=\\\"float-right  m-2 p-2\\\" (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n      <table class=\\\"table\\\">\\n        <thead class=\\\"thead-dark\\\">\\n          <tr>\\n            <th (click)=\\\"sort('state')\\\" class=\\\"w-25\\\">State&nbsp;<i class=\\\"fa fa-sort\\\"></i></th>\\n            <th (click)=\\\"sort('confirmed')\\\">Confirmed&nbsp;<i class=\\\"fa fa-sort\\\"></i></th>\\n            <th (click)=\\\"sort('deaths')\\\">Deaths&nbsp;<i class=\\\"fa fa-sort\\\"></i></th>\\n            <th (click)=\\\"sort('active')\\\">Active&nbsp;<i class=\\\"fa fa-sort\\\"></i></th>\\n            <th (click)=\\\"sort('recovered')\\\">Recovered&nbsp;<i class=\\\"fa fa-sort\\\"></i></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr\\n            *ngFor=\\\"let states of countryWiseState | orderBy: key: reverse |  paginate: {itemsPerPage: 7, currentPage: p}\\\">\\n            <td>{{ states.state }}</td>\\n            <td>{{ states.confirmed }}</td>\\n            <td>{{ states.deaths }}</td>\\n            <td>{{ states.active }}</td>\\n            <td>{{ states.recovered }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n\\n    </div>\\n    <div class=\\\"col\\\">\\n      <google-chart [data]=\\\"lineChart\\\"></google-chart>\\n    </div>\\n  </div>\\n\\n</div>\"","import { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\nimport { DataServiceService } from './../services/data-service.service';\nimport { Component, OnInit, HostListener } from '@angular/core';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  private stateName: any;\n  private p: number = 1;\n  private countries = [];\n  private confirmed: number = 0;\n  private active: number = 0;\n  private deaths: number = 0;\n  private recovered: number = 0;\n  private selectedCountry = \"India\"\n  private globalData: GlobalDataSummary[];\n  private globalDataCountryWise;\n  private countryWiseState;\n  private selectDateWiseData: DataWiseData[];\n  private lineChart: GoogleChartInterface = {\n    chartType: 'LineChart'\n  }\n  constructor(private data: DataServiceService) { }\n\n  updateChart() {\n    let dataTable = [];\n    dataTable.push(['Date', 'Cases']);\n    this.selectDateWiseData[this.selectedCountry].forEach(res => {\n      dataTable.push([res.date, res.cases])\n    })\n    this.lineChart = {\n      chartType: 'LineChart',\n      dataTable: dataTable,\n      options: {\n        animation: {\n          duration: 1000,\n          easing: 'out',\n        },\n        height: 500\n      }\n    }\n  }\n\n  ngOnInit() {\n    merge(\n      this.data.getGlobalData().pipe(\n        map(result => {\n          this.globalData = result;\n          result.forEach(res => {\n            this.countries.push(res.country)\n          })\n        })\n      ),\n      this.data.getStateWiseDate().pipe(\n        map(result => {\n          this.globalDataCountryWise = result;\n        })\n      ),\n      this.data.getDateWiseData().pipe(\n        map(result => {\n          this.selectDateWiseData = result;\n        })\n      )\n    ).subscribe({\n      complete: () => {\n        this.onSelectCountry(this.selectedCountry)\n        this.updateChart();\n      }\n    })\n  }\n  search() {\n    if (this.stateName == '') {\n      this.ngOnInit();\n    } else {\n      this.countryWiseState = this.countryWiseState.filter(res => {\n        return res.state.toLocaleLowerCase().match(this.stateName.toLocaleLowerCase())\n      })\n    }\n  }\n\n  key: string = \"state\";\n  reverse: boolean = false;\n  sort(key) {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n\n  onSelectCountry(country) {\n    this.selectedCountry = country;\n    this.globalData.forEach(cs => {\n      if (cs.country === this.selectedCountry) {\n        this.confirmed = cs.confirmed;\n        this.active = cs.active;\n        this.deaths = cs.deaths;\n        this.recovered = cs.recovered;\n      }\n    })\n    this.countryWiseState = this.globalDataCountryWise[country];\n    this.updateChart();\n  }\n}\n","module.exports = \".ui.statistic > .value, .ui.statistics .statistic > .value {\\r\\n    font-size: 2.5rem !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n    padding: 2rem 2rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51aS5zdGF0aXN0aWMgPiAudmFsdWUsIC51aS5zdGF0aXN0aWNzIC5zdGF0aXN0aWMgPiAudmFsdWUge1xyXG4gICAgZm9udC1zaXplOiAyLjVyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxuLmp1bWJvdHJvbiB7XHJcbiAgICBwYWRkaW5nOiAycmVtIDJyZW07XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h2 class=\\\"display-4 text-center\\\">COVID-19 Worldwide Tracker</h2>\\n  <hr class=\\\"my-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Confirmed</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ confirmed | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3> Deaths</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ deaths | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Recovered</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ recovered | number}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card col p-3 m-1\\\">\\n      <div class=\\\"ui statistic\\\">\\n        <div class=\\\"label\\\">\\n          <h3>Active</h3>\\n        </div>\\n        <div class=\\\"value\\\">\\n          {{ active | number}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr class=\\\"my-2\\\">\\n  <div class=\\\"ui form\\\">\\n    <div class=\\\"inline fields\\\">\\n      <label for=\\\"caseType\\\">Select Case Type:</label>\\n      <div class=\\\"field\\\">\\n        <div class=\\\"ui radio checkbox\\\">\\n          <input type=\\\"radio\\\" value=\\\"confirmed\\\" id=\\\"confirmed\\\" name=\\\"caseType\\\" checked=\\\"\\\" tabindex=\\\"0\\\" class=\\\"hidden\\\">\\n          <label for=\\\"confirmed\\\">Confirmed</label>\\n        </div>\\n      </div>\\n      <div class=\\\"field\\\">\\n        <div class=\\\"ui radio checkbox\\\">\\n          <input type=\\\"radio\\\" value=\\\"deaths\\\" id=\\\"deaths\\\" name=\\\"caseType\\\" tabindex=\\\"0\\\" class=\\\"hidden\\\">\\n          <label for=\\\"deaths\\\">Deaths</label>\\n        </div>\\n      </div>\\n      <div class=\\\"field\\\">\\n        <div class=\\\"ui radio checkbox\\\">\\n          <input type=\\\"radio\\\" value=\\\"active\\\" id=\\\"active\\\" name=\\\"caseType\\\" tabindex=\\\"0\\\" class=\\\"hidden\\\">\\n          <label for=\\\"active\\\">Active</label>\\n        </div>\\n      </div>\\n      <div class=\\\"field\\\">\\n        <div class=\\\"ui radio checkbox\\\">\\n          <input type=\\\"radio\\\" value=\\\"recovered\\\" id=\\\"recovered\\\" name=\\\"caseType\\\" tabindex=\\\"0\\\" class=\\\"hidden\\\">\\n          <label for=\\\"recovered\\\">Recovered</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr class=\\\"my-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <google-chart [data]=\\\"pieChart\\\"></google-chart>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <google-chart [data]=\\\"columnChart\\\"></google-chart>\\n      </div>\\n    </div>\\n\\n  </div>\"","import { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\nimport { DataServiceService } from './../services/data-service.service';\nimport { Component, OnInit, HostListener } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  private confirmed: number = 0;\n  private active: number = 0;\n  private deaths: number = 0;\n  private recovered: number = 0;\n  private globalData: GlobalDataSummary[];\n  public pieChart: GoogleChartInterface = {\n    chartType: 'PieChart'\n  }\n\n  public columnChart: GoogleChartInterface = {\n    chartType: 'ColumnChart'\n  }\n  constructor(private dataService: DataServiceService) { }\n\n\n  @HostListener('change', ['$event']) onSelect(event) {\n    console.log(event.target.value)\n    let selectedValue: string = event.target.value;\n    this.initChart(selectedValue);\n  }\n\n  initChart(selectedValue?: string) {\n    let dataTable = [];\n    dataTable.push(['country', 'cases'])\n\n    this.globalData.forEach(cs => {\n      if (selectedValue == 'recovered') {\n        if (cs.recovered > 500000) {\n          dataTable.push([\n            cs.country, cs.recovered\n          ])\n        }\n      } else if (selectedValue == 'deaths') {\n        if (cs.deaths > 25000) {\n          dataTable.push([\n            cs.country, cs.deaths\n          ])\n        }\n      } else if (selectedValue == 'active') {\n        if (cs.active > 100000) {\n          dataTable.push([\n            cs.country, cs.active\n          ])\n        }\n      } else {\n        if (cs.confirmed > 500000) {\n          dataTable.push([\n            cs.country, cs.confirmed\n          ])\n        }\n      }\n    })\n\n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable: dataTable,\n      //firstRowIsData: true,\n      options: {\n        height: 250,\n        animation: {\n          duration: 1000,\n          easing: 'out',\n        }\n      },\n    };\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable: dataTable,\n      //firstRowIsData: true,\n      options: {\n        height: 250,\n        animation: {\n          duration: 1000,\n          easing: 'out',\n        }\n      },\n    };\n  }\n  ngOnInit() {\n\n    this.dataService.getGlobalData().subscribe({\n      next: result => {\n        this.globalData = result;\n        result.forEach(cs => {\n          if (!Number.isNaN(cs.confirmed)) {\n            this.confirmed += cs.confirmed;\n            this.active += cs.active;\n            this.deaths += cs.deaths;\n            this.recovered += cs.recovered;\n          }\n\n        });\n        this.initChart();\n      }\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  navbar works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  todayDate: Date = new Date();\n  yesterdayDate: Date = new Date(this.todayDate.setDate(this.todayDate.getDate() - 2));\n  yesterdayDateString = this.yesterdayDate.toLocaleDateString().split('/').join('-');\n\n  private globalDataURL = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\" + (\"0\" + this.yesterdayDateString).slice(0, 10) + \".csv\";\n\n  private dateWiseData = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n\n  constructor(private http: HttpClient) { }\n\n  getGlobalData() {\n    return this.http.get(this.globalDataURL, { responseType: 'text' }).pipe(\n      map(result => {\n        var raw = {}\n        var data: GlobalDataSummary[] = [];\n        var rows = result.split('\\n');\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          var cols = row.split(/,(?=\\S)/g);\n          var cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10],\n          };\n          let temp: GlobalDataSummary = raw[cs.country];\n          if (temp) {\n            temp.deaths = cs.deaths + temp.deaths;\n            temp.recovered = cs.recovered + temp.recovered;\n            temp.active = cs.active + temp.active;\n            temp.confirmed = cs.confirmed + temp.confirmed;\n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n          // console.log(cols)\n        })\n        return <GlobalDataSummary[]>Object.values(raw);\n      })\n    )\n  }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseData, { responseType: 'text' }).pipe(\n      map((result) => {\n        let rows = result.split('\\n')\n        let mainData = [];\n        let headers = rows[0];\n        let dates = headers.split(/,(?=\\S)/g);\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/g);\n          let con = cols[1]\n          cols.splice(0, 4)\n          mainData[con] = [];\n          cols.forEach((value, index) => {\n            let dw: DataWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n            }\n            mainData[con].push(dw)\n          })\n        })\n        return mainData;\n      })\n    )\n  }\n\n  getStateWiseDate() {\n    return this.http.get(this.globalDataURL, { responseType: 'text' }).pipe(\n      map(res => {\n        var raw = [];\n        var countryWiseArray = [];\n        var rows = res.split('\\n')\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/g)\n          let cases = {\n            state: cols[2],\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10],\n          }\n          raw.push(cases);\n\n        })\n        const groupBy = (array, key) => {\n          return array.reduce((result, currentValue) => {\n            (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue)\n            return result;\n          }, {})\n        }\n\n        const dataByCountry = groupBy(raw, \"country\")\n        const dataByCountryUS = {}\n        dataByCountry[\"US\"].forEach((stateRow) => {\n          let temp = dataByCountryUS[stateRow.state];\n          if (temp) {\n            temp.deaths = stateRow.deaths + temp.deaths;\n            temp.recovered = stateRow.recovered + temp.recovered;\n            temp.active = stateRow.active + temp.active;\n            temp.confirmed = stateRow.confirmed + temp.confirmed;\n            dataByCountryUS[stateRow.state] = temp;\n          } else {\n            dataByCountryUS[stateRow.state] = stateRow;\n          }\n        })\n        dataByCountry[\"US\"] = Object.values(dataByCountryUS);\n        return dataByCountry\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}